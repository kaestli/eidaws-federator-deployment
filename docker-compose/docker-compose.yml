version: '3.3'
services:
  # eidaws-federator
  federator:
    container_name: eidaws-federator
    image: eidaws-federator:1.2.0
    build:
      context: .
      dockerfile: ./federator/Dockerfile
    restart: always
    logging:
      driver: "json-file"
      options:
        max-size: "10m"
        max-file: "10"
    volumes:
      - /etc/nginx/cert:/etc/nginx/cert
      - type: volume
        source: eidaws_federator_log
        target: /var/log/eidaws
        volume:
          nocopy: false
    ports:
      - "8080:8080"
      - "8443:443"

  # eidaws-federator Redis backend
  federator-redis:
    container_name: eidaws-federator-redis
    image: redis:6
    logging:
      driver: "json-file"
      options:
        max-size: "10m"
        max-file: "3"
    volumes:
      - ./redis:/usr/local/etc/redis
    restart: always
    command: "redis-server /usr/local/etc/redis/redis.conf"

  # eidaws-federator Swagger-UI
  federator-swaggerui:
    container_name: eidaws-federator-swaggerui
    image: swaggerapi/swagger-ui:v3.34.0
    environment:
      - "URLS=[{url:\"openapi/dataselect.yml\",name:\"fdsnws-dataselect\"},{url:\"openapi/station.yml\",name:\"fdsnws-station\"},{url:\"openapi/wfcatalog.yml\",name:\"eidaws-wfcatalog\"}]"
      - BASE_URL=/swagger
      - PORT=8082
    logging:
      driver: "json-file"
      options:
        max-size: "10m"
        max-file: "3"
    volumes:
      - ./eidaws/eidaws.federator/openapi:/usr/share/nginx/html/openapi
    restart: always
    ports:
      - "8082:8082"

  # eidaws-endpoint-proxy
  endpoint-proxy:
    container_name: eidaws-endpoint-proxy
    image: eidaws-endpoint-proxy:1.1.4
    build:
      context: .
      dockerfile: ./proxy/Dockerfile
    restart: always
    logging:
      driver: "json-file"
      options:
        max-size: "10m"
        max-file: "5"
    volumes:
      - type: volume
        source: eidaws_endpoint_proxy_log
        target: /var/log/eidaws
        volume:
          nocopy: false
      - type: volume
        source: eidaws_endpoint_proxy_cache
        target: /var/cache/nginx
        volume:
          nocopy: false
    ports:
      - "8090:8090"

  # eidaws-stationlite
  stationlite:
    container_name: eidaws-stationlite
    image: eidaws-stationlite:1.1.4
    build:
      context: .
      dockerfile: ./stationlite/Dockerfile
    env_file:
      - env
    restart: always
    logging:
      driver: "json-file"
      options:
        max-size: "10m"
        max-file: "5"
    volumes:
      - type: volume
        source: eidaws_stationlite_log
        target: /var/log/eidaws
        volume:
          nocopy: false
    ports:
      - "8089:8089"

  # eidaws-stationlite PostgreSQL backend
  stationlite-psql:
    container_name: eidaws-stationlite-psql
    image: postgres:12
    shm_size: 512m
    env_file:
      - env
    restart: always
    logging:
      driver: "json-file"
      options:
        max-size: "10m"
        max-file: "3"
    volumes:
      - type: volume
        source: eidaws_stationlite_pgdata
        target: /var/lib/postgresql/data
        volume:
          nocopy: false
    ports:
      - "5432:5432"

volumes:
  eidaws_federator_log:
  eidaws_endpoint_proxy_log:
  eidaws_endpoint_proxy_cache:
  eidaws_stationlite_log:
  eidaws_stationlite_pgdata:
